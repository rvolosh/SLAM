% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surv_gethr.R
\name{surv_gethr}
\alias{surv_gethr}
\title{Get Hazard Ratio from Cox Model}
\usage{
surv_gethr(fit, vars, names = NULL, ndec = 4)
}
\arguments{
\item{fit}{coxph model}

\item{vars}{character vector including the covariates fo the cox model that we would
like to extract hazard ratios for. Note: if a covariate was wrapped, for example tt(age_wk),
the wrapping and the variable should be included}

\item{names}{character vector of same length as vars that provides formal names for the variables
in place of variable name.}

\item{ndec}{numeric that specifies the number of decimal places to round the hazard ratios}
}
\value{
\item{hr_table}{
 a dataframe whos rows correspond the variables inputted by the vars argument and whos names are
 determined by the names argument. If the names argument is not given the names are the same
 as the variable names.
 This dataframe has the following columns (1) value - provides the hazard ratio
 (2) lower - lower bound of 95% confidence interval for hazard ratio
 (3) upper - upper bound of 95% confidence interval for hazard ratio
 (4) pval - the p-value for the hazard ratio
 (5) final - a character stirng that includes columns 1-4 for table output
 (6) with_names - character string like final, but the variable name is included
 }
 \item{hr_text}{
 a character string that has the with names for each variable separated by \\n,
 so that the hazard ratios for vars can be included in a kaplan meier plot.
 }
}
\description{
The purpose of this function is so that the user can easily extract hazard ratios,
hazard ratio confidence intervals, and hazard ratio pvalues easily. This function
also outputs Hazard Ratios that can easily be added plots
}
\examples{
# Repeated Measures (Longitudinal) Example
# Lets see how glucose predicts mortaility in SLAM

if (requireNamespace("dplyr", quietly = TRUE)) {
  # Checkout dataframes --------------------------------------------------------
  # Checkout census
  head(data_SLAM_census)

  # Checkout glucose
  head(data_SLAM_gluc)

  # Checkout survival data
  head(data_SLAM_surv)

  # Create dataframe with everything -------------------------------------------
  # drop lactate to simplify
  main <- dplyr::select(data_SLAM_gluc, -lact)
  # obtain census info for dob
  main <- dplyr::left_join(main, data_SLAM_census, by = "idno")
  # obtain survival info for dod
  main <- dplyr::left_join(main, data_SLAM_surv, by = "tag")
  # filter mice without date of death
  main <- dplyr::filter(main, !is.na(died))
  # create age, age of death, and difference between age and age of death
  main <- dplyr::mutate(main, age_wk = as.numeric(difftime(date, dob, units = "weeks")),
                        age_wk_death = as.numeric(difftime(died, dob, units = "weeks")),
                        dif = age_wk_death - age_wk)
  # filter mice measured after death because tmerge will throw error
  main <- dplyr::filter(main, age_wk <= age_wk_death)
  # filter mice that were measured same day as death because tmerge with throw an error
  main <- dplyr::filter(main, !(age_wk == age_wk_death))

  # Checkout main --------------------------------------------------------------
  # Table death censor. 0 means death was not natural and 1 means natural deat
  table(main$dead_censor)

  # Checkout main
  head(main)
  # Checkout main NA's
  apply(apply(main,2,is.na),2,sum)

  # Now use surv_tmerge --------------------------------------------------------
  main_tmerge <- surv_tmerge(data = main,
                             id = "idno",
                             age = "age_wk",
                             age_death = "age_wk_death",
                             death_censor = "dead_censor",
                             outcomes = c("gluc"))

  # Now lets make a cox model with our now time dependent dataframe ------------
  fit <- surv_cox(data = main_tmerge,
                  covariates = ~gluc+age_wk+sex+strain,
                  time = "tstart",
                  time2 = "tstop",
                  death = "death")

  # Now lets extract Hazard Ratios ------------------------------------------
  hrs <- surv_gethr(fit = fit,
                    vars =c("gluc", "age_wk"),
                    names = c("Glucose", "Age (weeks)"),
                    ndec = 4)

  # Lets look at final HR table
  dplyr::select(hrs$hr_table, final)

  # Lets make predictions on other data ---------------------------------------
  # create new data for 4 mice
  pred_df <- data.frame(age_wk = c(40, 80, 20, 100),
                        gluc = c(180, 200, 150, 120),
                        sex = c("M", "M", "F","F"),
                        strain = c("B6", "HET3","B6","HET3"))
  # use predict function to get HR for each mouse
  predict(fit, newdata = pred_df, type = "risk")

} else{
  print("Install dplyr to run this example")
}

}
